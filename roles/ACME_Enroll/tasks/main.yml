---


- name: Create AnsiSSL directory
  become: true
  ansible.builtin.file:
    path: "{{ acme_dir_base }}"
    state: directory
    mode: "0755"


- name: Create ACME sub directories
  become: true
  ansible.builtin.file:
    path: "{{ [ acme_dir_base, item ] | path_join }}"
    state: directory
    mode: "0700"
  with_items:
    - "{{ acme_dir_account }}"
    - "{{ [ acme_dir_account, acme_directory_url ] | path_join }}"
    - "{{ acme_dir_certs }}"


- name: Check if ACME account private key already exists
  become: true
  ansible.builtin.stat:
    path: "{{ [ acme_dir_base, acme_dir_account, acme_directory_url, acme_key_account ] | path_join }}"
  register: result

# We need the following libs to be installed on Debian:
# - No: python3-crypto
# - No: python-cryptography  <-- This might work with the default python2.  Doesn't work with python3
# - Yes: python3-cryptography
- name: Generate an ACME account private key with the default values (4096 bits, RSA) if one doesn't exist yet
  become: true
  community.crypto.openssl_privatekey:
    path: "{{ [ acme_dir_base, acme_dir_account, acme_directory_url, acme_key_account ] | path_join }}"
    mode: "0600"
  when:
    - not result.stat.exists


- name: Make sure account exists and has given contacts. We agree to TOS.
  tags:
    - acme_enroll
  become: true
  community.crypto.acme_account:
    account_key_src: "{{ [ acme_dir_base, acme_dir_account, acme_directory_url, acme_key_account ] | path_join }}"
    acme_directory: "{{ acme_directory }}"
    acme_version:  "{{ acme_version }}"
    state: present
    terms_agreed: yes
    contact: "{{ acme_contacts }}"

